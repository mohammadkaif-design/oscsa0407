#include <stdio.h>

int main() {
    int n, i, j, temp;
    int burst[20], wait[20], turnaround[20], process[20], priority[20];
    float avg_wait = 0, avg_turnaround = 0;

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    for (i = 0; i < n; i++) {
        printf("Enter Burst Time and Priority for P%d: ", i + 1);
        scanf("%d %d", &burst[i], &priority[i]);
        process[i] = i + 1;
    }

    // sort by priority (lower number = higher priority)
    for (i = 0; i < n - 1; i++) {
        for (j = i + 1; j < n; j++) {
            if (priority[i] > priority[j]) {
                // swap priority
                temp = priority[i];
                priority[i] = priority[j];
                priority[j] = temp;
                // swap burst
                temp = burst[i];
                burst[i] = burst[j];
                burst[j] = temp;
                // swap process IDs
                temp = process[i];
                process[i] = process[j];
                process[j] = temp;
            }
        }
    }

    // waiting time
    wait[0] = 0;
    for (i = 1; i < n; i++) {
        wait[i] = 0;
        for (j = 0; j < i; j++) {
            wait[i] += burst[j];
        }
    }

    // turnaround time
    for (i = 0; i < n; i++) {
        turnaround[i] = burst[i] + wait[i];
    }

    // calculate averages
    for (i = 0; i < n; i++) {
        avg_wait += wait[i];
        avg_turnaround += turnaround[i];
    }

    avg_wait /= n;
    avg_turnaround /= n;

    printf("\nProcess\tBurst\tPriority\tWaiting\tTurnaround\n");
    for (i = 0; i < n; i++) {
        printf("P%d\t%d\t%d\t\t%d\t%d\n", process[i], burst[i], priority[i], wait[i], turnaround[i]);
    }

    printf("\nAverage Waiting Time: %.2f", avg_wait);
    printf("\nAverage Turnaround Time: %.2f\n", avg_turnaround);

    return 0;
}
